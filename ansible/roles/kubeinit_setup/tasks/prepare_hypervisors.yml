---
# Copyright kubeinit contributors
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Prepare the environment and stop the deployment if required
  block:
    - name: Prepare environment if needed
      ansible.builtin.include_tasks: prepare_environment.yml
      vars:
        environment_prepared: "{{ 'kubeinit_facts' in groups }}"
      when: not environment_prepared

    - name: Stop the deployment if required
      block:
        - name: "Stop before 'task-prepare-hypervisors' when requested"
          ansible.builtin.add_host:
            name: "kubeinit-facts"
            playbook_terminated: true
        - name: End play
          ansible.builtin.meta: end_play
      when: kubeinit_stop_before_task is defined and kubeinit_stop_before_task == 'task-prepare-hypervisors'
  tags: omit_from_grapher

- name: Delegate to kubeinit_setup_host_name
  block:

    - name: Ensure hypervisors have all requirements for ansible
      ansible.builtin.include_role:
        name: kubeinit.kubeinit.kubeinit_setup
        tasks_from: setup_ansible_host.yml
        public: true
      loop: "{{ groups['kubeinit_hypervisors'] | default([]) }}"
      vars:
        _param_ansible_host: "{{ item }}"

    - name: Add setup_host authorized key to hypervisor hosts
      ansible.posix.authorized_key:
        user: "{{ hostvars[hypervisor_host].ssh_username | default(kubeinit_facts_hostvars.remote_user) }}"
        key: "{{ hostvars[kubeinit_setup_host_name].keypair_pubkey }}"
        comment: "{{ hostvars[kubeinit_setup_host_name].keypair_comment }}"
        state: present
      loop: "{{ groups['kubeinit_hypervisors'] | default([]) }}"
      loop_control:
        loop_var: hypervisor_host
      become: "{{ true if (hostvars[hypervisor_host].ssh_username | default(kubeinit_facts_hostvars.remote_user) == 'root') else false }}"
      become_user: "{{ hostvars[hypervisor_host].ssh_username | default(kubeinit_facts_hostvars.remote_user) }}"
      delegate_to: "{{ hypervisor_host }}"

    - name: Confirm access to hypervisors from setup host and user
      ansible.builtin.shell: |
        set -o pipefail
        ssh \
            -F {{ hostvars[hypervisor_host].deploy_ssh_config }} \
            {{ hostvars[hypervisor_host].ssh_username | default(kubeinit_facts_hostvars.remote_user) }}@{{ hostvars[hypervisor_host].ansible_host }} 'echo connected' || true
      args:
        executable: /bin/bash
      register: _result
      changed_when: "_result.rc == 0"
      retries: 30
      delay: 10
      until: "'connected' in _result.stdout"
      loop: "{{ groups['kubeinit_hypervisors'] | default([]) }}"
      vars:
        hypervisor_host: "{{ item }}"

  vars:
    kubeinit_setup_host_name: "{{ groups['setup_host'] | first }}"
  environment:
    PATH: "{{ hostvars[kubeinit_setup_host_name].remote_home }}/.local/bin:{{ hostvars[kubeinit_setup_host_name].remote_path }}"
  delegate_to: "{{ kubeinit_setup_host_name }}"

- name: Update progress and stop the deployment if required
  block:
    - name: Add task-prepare-hypervisors to tasks_completed
      ansible.builtin.add_host:
        name: "kubeinit-facts"
        tasks_completed: "{{ hostvars['kubeinit-facts'].tasks_completed | union(['task-prepare-hypervisors']) }}"

    - name: Update kubeinit_facts_hostvars
      ansible.builtin.set_fact:
        kubeinit_facts_hostvars: "{{ hostvars['kubeinit-facts'] }}"

    - name: Stop the deployment if required
      block:
        - name: Stop after 'task-prepare-hypervisors' when requested
          ansible.builtin.add_host:
            name: "kubeinit-facts"
            playbook_terminated: true
        - name: End play
          ansible.builtin.meta: end_play
      when: kubeinit_stop_after_task is defined and kubeinit_stop_after_task in kubeinit_facts_hostvars.tasks_completed
  tags: omit_from_grapher
