---
# Copyright kubeinit contributors
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.

- name: Set cluster_nodes_map_list fact to defaults
  ansible.builtin.set_fact:
    cluster_nodes_map_list: "{{ hostvars['kubeinit-defaults'].default_cluster_nodes_map_list }}"

- name: Add entries from cluster_nodes_spec to cluster_nodes_map_list when defined
  ansible.builtin.set_fact:
    cluster_nodes_map_list: "{{ cluster_nodes_map_list + (cluster_nodes_spec | from_yaml) }}"
  when: cluster_nodes_spec is defined

- name: Add all items in cluster_nodes_map_list to cluster_nodes_defaults for this distro
  ansible.builtin.set_fact:
    cluster_nodes_defaults: "{{ cluster_nodes_defaults | default([]) + (groups['cluster_nodes'] | product([item])) }}"
  loop: "{{ cluster_nodes_map_list }}"
  when: item['when_distro'] is not defined or kubeinit_cluster_distro in item['when_distro']

- name: Apply defaults to all cluster nodes
  ansible.builtin.add_host:
    name: "{{ _host }}"
    os: "{{ _defaults['os'] if (_defaults['os'] is defined and _group_matches|bool and _type_matches|bool) else omit }}"
    vcpus: "{{ _defaults['vcpus'] if (_defaults['vcpus'] is defined and _group_matches|bool and _type_matches|bool) else omit }}"
    maxvcpus: "{{ _defaults['maxvcpus'] if (_defaults['maxvcpus'] is defined and _group_matches|bool and _type_matches|bool) else omit }}"
    disk: "{{ _defaults['disk'] if (_defaults['disk'] is defined and _group_matches|bool and _type_matches|bool) else omit }}"
    ram: "{{ _defaults['ram'] if (_defaults['ram'] is defined and _group_matches|bool and _type_matches|bool) else omit }}"
    target_order: "{{ _defaults['target_order'] if (_defaults['target_order'] is defined and _group_matches|bool and _type_matches|bool) else omit }}"
  loop: "{{ cluster_nodes_defaults }}"
  vars:
    _host: "{{ item[0] }}"
    _defaults: "{{ item[1] }}"
    _group_matches: "{{ item[1]['when_group'] | default('cluster_nodes') in hostvars[item[0]].group_names }}"
    _type_matches: "{{ item[1]['when_type'] | default(hostvars[item[0]].type) | default('') == hostvars[item[0]].type | default('') }}"

- name: Clear cluster_nodes_defaults
  ansible.builtin.set_fact:
    cluster_nodes_defaults: null
